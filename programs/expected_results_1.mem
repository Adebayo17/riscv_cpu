00000001
00000002
00000003
00000004
00000003  // ADD x3 = x1 + x2
00000001  // SUB x4 = x2 - x1
00000003  // AND
00000003  // OR
00000000  // XOR
00000004  // SLL
00000000  // SRL
00000000  // SRA
00000000  // Padding for missing instructions
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000


// alu_ctrl  operand_A  operand_B  expected_result
//0000 00000000 00000001 00000001  // ADDI x1 = 0 + 1 = 1
//0000 00000000 00000002 00000002  // ADDI x2 = 0 + 2 = 2
//0000 00000000 00000003 00000003  // ADDI x3 = 0 + 3 = 3
//0000 00000000 00000004 00000004  // ADDI x4 = 0 + 4 = 4
//0000 00000001 00000002 00000003  // ADD  (1 + 2 = 3)
//0001 00000002 00000001 00000001  // SUB  (2 - 1 = 1)
//0010 00000003 00000003 00000003  // AND  (3 & 3 = 3)
//0011 00000003 00000003 00000003  // OR   (3 | 3 = 3)
//0100 00000003 00000003 00000000  // XOR  (3 ^ 3 = 0)
//0101 00000001 00000002 00000004  // SLL  (1 << 2 = 4)
//0110 00000001 00000002 00000000  // SRL  (1 >> 2 = 0)
//0111 00000001 00000002 00000000  // SRA  (1 >> 2 = 0, arithmetic shift)
